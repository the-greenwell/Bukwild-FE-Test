{"version":3,"sources":["abc_logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Layout","data","className","headline","subhead","cta","App","useState","setData","page","setPage","history","useHistory","setBackground","slug","selected","find","pages","push","blocks","useEffect","fetch","process","headers","then","response","json","myJson","document","querySelector","classList","add","path","window","location","href","replace","console","log","length","style","backgroundImage","background","src","logo","alt","map","activeClassName","to","onClick","title","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"qPAAe,MAA0B,qC,OCOnCA,EAAS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACE,qCAEE,sBAAKC,UAAU,wBAAf,UACE,mBAAGA,UAAU,yBAAb,SAAuCD,EAAKE,WAC5C,mBAAGD,UAAU,wBAAb,SAAsCD,EAAKG,aAK7C,sBAAKF,UAAU,uBAAf,UACE,mBAAGA,UAAU,6BAAb,SAA2CD,EAAKI,MAChD,oBAAGH,UAAU,gBAAb,yBAAyC,sBAAMA,UAAU,SAAhB,8BAkHlCI,MA5Gf,WAAe,MAEWC,mBAAS,IAFpB,mBAENN,EAFM,KAEAO,EAFA,OAKWD,mBAAS,IALpB,mBAKNE,EALM,KAKAC,EALA,KAOPC,EAAUC,cAqBVC,EAAgB,SAACC,GAErB,IAAIC,EAAWd,EAAKe,MAAK,SAACC,GACxB,GAAGA,EAAMH,MAAQA,EAAM,OAAO,KAG7BC,IACDJ,EAAQO,KAAK,IAAMH,EAASD,MAC5BJ,EAAQK,EAASI,OAAO,MA6B5B,OAxBAC,qBAAU,WA9BRC,MAAM,GAAD,OAAIC,mBAAJ,sBACF,CACGC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIfC,MAAK,SAASC,GACb,OAAOA,EAASC,UAGjBF,MAAK,SAASG,GACbnB,EAAQmB,EAAOV,UAoBLW,SAASC,cAAc,QAC7BC,UAAUC,IAAI,aACtB,IAEFX,qBAAU,WACR,IAAIY,EAAOC,OAAOC,SAASC,KAAKC,QAAQ,SAAS,IACjDC,QAAQC,IAAIN,GACT/B,EAAKsC,OAAS,IACfF,QAAQC,IAAI,UAERN,EAAKO,OAAS,GAChBF,QAAQC,IAAI,UACZD,QAAQC,IAAIrC,GACZY,EAAcmB,KAEdK,QAAQC,IAAI,UACZzB,EAAcZ,EAAK,GAAGa,UAGzB,CAACb,IAGF,qBAAKC,UAAU,MAAMsC,MAAO,CAAEC,gBAAgB,QAAD,OAAUnB,mBAAV,wBAAgDb,EAAKiC,WAArD,OAA7C,SACI,sBAAKxC,UAAU,YAAf,UAGE,sBAAKA,UAAU,mBAAf,UAGE,sBAAKA,UAAU,MAAf,UACE,qBAAKyC,IAAKC,EAAM1C,UAAU,WAAW2C,IAAI,aACzC,qBAAK3C,UAAU,cAAf,2BAMF,oBAAIA,UAAU,OAAd,SAEID,EAAK6C,KAAI,SAACrC,GAAD,OAAS,6BACI,cAAC,IAAD,CACEsC,gBAAgB,SAChBC,GAAIvC,EAAKK,KACTmC,QAAS,kBAAMpC,EAAcJ,EAAKK,OAHpC,SAKKL,EAAKyC,SANLzC,EAAKK,cActC,cAAC,IAAD,CACEkB,KAAK,SACLmB,OACE,kBAAM,cAAC,EAAD,CAAQlD,KAAMQ,aClHnB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJjC,SAASkC,eAAe,SAM1BV,M","file":"static/js/main.55e2b5b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/abc_logo.c72ca4e0.svg\";","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, Route, useHistory } from 'react-router-dom';\n\nimport logo from './abc_logo.svg';\n\n\nconst Layout = ({data}) => {\n  return(\n    <>\n      {/* Main Content */}\n      <div className='row max-width feature'>\n        <p className='headline col col-stack'>{data.headline}</p>\n        <p className='subhead col col-stack'>{data.subhead}</p>\n      </div>\n\n\n      {/* Footer */}\n      <div className='row max-width footer'>\n        <p className='callToAction col col-stack'>{data.cta}</p>\n        <p className='col col-stack'>LET'S TALK. <span className='orange'>â†’</span></p>\n      </div>\n    </>\n  )\n};\n\nfunction App() {\n  /* State for initial data fetch */\n  const [data, setData] = useState([]);\n\n  /* State tracking current page for styling */\n  const [page, setPage] = useState([]);\n\n  const history = useHistory();\n\n  const getData = () => {\n    /* Fetch Data from included json */\n    fetch(`${process.env.PUBLIC_URL}/data/content.json`\n      ,{\n          headers : {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           }\n      })\n      /* Format 'server' response to readable format */\n      .then(function(response){\n        return response.json();\n      })\n      /* Making data available to app via state */\n      .then(function(myJson){\n        setData(myJson.pages);\n      });\n  }\n\n  const setBackground = (slug) => {\n    /* Search for data-set mathing slug */\n    var selected = data.find((pages) => {\n      if(pages.slug == slug) return true\n    })\n    /* Won't set state if slug doesn't match data */\n    if(selected) {\n      history.push('/' + selected.slug);\n      setPage(selected.blocks[0]);\n    }\n  }\n\n  /* Get data before initial paint */\n  useEffect(()=>{\n    getData();\n    /* Fade in animation to handle flicker from initial render */\n    let element = document.querySelector('.App');\n    element.classList.add('fade-in');\n  },[])\n\n  useEffect(() => {\n    let path = window.location.href.replace(/(.*\\/)/,'');\n    console.log(path)\n    if(data.length > 0){\n      console.log('pass 1');\n    /* Handle page refreshes */\n      if (path.length > 0) {\n        console.log('pass 2');\n        console.log(data)\n        setBackground(path);\n      } else {\n        console.log('pass 3');\n        setBackground(data[0].slug);\n      }\n    }\n  }, [data])\n\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url('${process.env.PUBLIC_URL}/backgrounds/${page.background}')` }}>\n        <div className='container'>\n\n          {/* Page Header */}\n          <div className='max-width header'>\n\n            {/* Logo and Contact row */}\n            <div className='row'>\n              <img src={logo} className='logo col' alt='ABC Logo'/>\n              <div className='contact col'>\n                Contact Us\n              </div>\n            </div>\n\n            {/* Nav Menu */}\n            <ul className='menu'>\n              {\n                data.map((page)=> <li key={page.slug}>\n                                      <NavLink\n                                        activeClassName='orange'\n                                        to={page.slug}\n                                        onClick={() => setBackground(page.slug)}\n                                      >\n                                          {page.title}\n                                      </NavLink>\n                                  </li>)\n              }\n            </ul>\n          </div>\n\n          {/* Route to Layout component */}\n          <Route\n            path='/:slug'\n            render={\n              () => <Layout data={page} />\n            }/>\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}